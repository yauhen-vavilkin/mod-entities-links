{
  "id": "@artifactId@-@version@",
  "name": "Entities Links",
  "requires": [
    {
      "id": "login",
      "version": "7.0"
    },
    {
      "id": "permissions",
      "version": "5.3"
    },
    {
      "id": "users",
      "version": "16.0"
    },
    {
      "id": "mapping-rules-provider",
      "version": "2.0"
    },
    {
      "id": "source-storage-source-records",
      "version": "3.1"
    },
    {
      "id": "authority-source-files",
      "version": "1.0"
    },
    {
      "id": "instance-storage",
      "version": "10.0"
    }
  ],
  "provides": [
    {
      "id": "instance-authority-links",
      "version": "2.1",
      "handlers": [
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/links/instances/{instanceId}",
          "permissionsRequired": [
            "instance-authority-links.instances.collection.get"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/start-poc",
          "permissionsRequired": [
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/links/instances/{instanceId}",
          "permissionsRequired": [
            "instance-authority-links.instances.collection.put"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/links/authorities/bulk/count",
          "permissionsRequired": [
            "instance-authority-links.authorities.bulk.post"
          ]
        }
      ]
    },
    {
      "id": "instance-authority-linking-rules",
      "version": "1.1",
      "handlers": [
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/linking-rules/instance-authority",
          "permissionsRequired": [
            "instance-authority.linking-rules.collection.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/linking-rules/instance-authority/{linkId}",
          "permissionsRequired": [
            "instance-authority.linking-rules.item.get"
          ]
        },
        {
          "methods": [
            "PATCH"
          ],
          "pathPattern": "/linking-rules/instance-authority/{linkId}",
          "permissionsRequired": [
            "instance-authority.linking-rules.item.patch"
          ]
        }
      ]
    },
    {
      "id": "instance-authority-links-statistics",
      "version": "2.0",
      "handlers": [
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/links/stats/authority",
          "permissionsRequired": [
            "instance-authority-links.authority-statistics.collection.get"
          ],
          "modulePermissions": [
            "users.collection.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/links/stats/instance",
          "permissionsRequired": [
            "instance-authority-links.instance-statistics.collection.get"
          ],
          "modulePermissions": [
            "inventory-storage.instances.collection.get"
          ]
        }
      ]
    },
    {
      "id": "_tenant",
      "version": "2.0",
      "interfaceType": "system",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/_/tenant",
          "permissionsRequired": [],
          "modulePermissions": [
            "users.collection.get",
            "users.item.post",
            "login.item.post",
            "perms.users.get",
            "perms.users.item.post",
            "perms.users.assign.immutable",
            "perms.users.assign.mutable"
          ]
        },
        {
          "methods": [
            "GET",
            "DELETE"
          ],
          "pathPattern": "/_/tenant/{id}",
          "permissionsRequired": []
        }
      ]
    }
  ],
  "permissionSets": [
    {
      "permissionName": "instance-authority-links.instances.collection.get",
      "displayName": "Entities Links - get instance-authority links",
      "description": "Get instance-authority links collection"
    },
    {
      "permissionName": "instance-authority-links.instances.collection.put",
      "displayName": "Entities Links - update instance-authority links",
      "description": "Update instance-authority links collection"
    },
    {
      "permissionName": "instance-authority-links.authorities.bulk.post",
      "displayName": "Entities Links - count instance-authority links for each authority",
      "description": "Count instance-authority links for each authority"
    },
    {
      "permissionName": "instance-authority.linking-rules.collection.get",
      "displayName": "Entities Links - get instance-authority linking rules",
      "description": "Get instance-authority linking rules"
    },
    {
      "permissionName": "instance-authority.linking-rules.item.get",
      "displayName": "Entities Links - get instance-authority linking rule",
      "description": "Get instance-authority linking rule"
    },
    {
      "permissionName": "instance-authority.linking-rules.item.patch",
      "displayName": "Entities Links - patch instance-authority linking rule",
      "description": "Patch instance-authority linking rule"
    },
    {
      "permissionName": "instance-authority-links.authority-statistics.collection.get",
      "displayName": "Entities Authority Links Statistics - get instance-authority links statistics",
      "description": "Get instance-authority links statistics"
    },
    {
      "permissionName": "instance-authority-links.instance-statistics.collection.get",
      "displayName": "Entities Instance Links Statistics - get instance-authority links statistics",
      "description": "Get instance-authority links (Instance) statistics"
    },
    {
      "permissionName": "instance-authority-links.instances.all",
      "displayName": "Entities Links - all instance-authority links permissions",
      "description": "Entire set of permissions needed to use instance-links operations",
      "subPermissions": [
        "instance-authority-links.instances.collection.get",
        "instance-authority-links.instances.collection.put",
        "instance-authority-links.authorities.bulk.post",
        "instance-authority.linking-rules.collection.get",
        "instance-authority.linking-rules.item.get",
        "instance-authority.linking-rules.item.patch",
        "instance-authority-links.authority-statistics.collection.get",
        "instance-authority-links.instance-statistics.collection.get"
      ]
    }
  ],
  "launchDescriptor": {
    "dockerImage": "@artifactId@:@version@",
    "dockerPull": false,
    "dockerArgs": {
      "HostConfig": {
        "Memory": 536870912,
        "PortBindings": {
          "8081/tcp": [
            {
              "HostPort": "%p"
            }
          ]
        }
      }
    },
    "env": [
      {
        "name": "JAVA_OPTIONS",
        "value": "-XX:MaxRAMPercentage=85.0"
      },
      {
        "name": "ENV",
        "value": "folio",
        "description": "The logical name of the deployment, must be unique across all environments using the same shared Kafka/Elasticsearch clusters, `a-z (any case)`, `0-9`, `-`, `_` symbols only allowed"
      },
      {
        "name": "DB_HOST",
        "value": "postgres",
        "description": "Postgres hostname"
      },
      {
        "name": "DB_PORT",
        "value": "5432",
        "description": "Postgres port"
      },
      {
        "name": "DB_USERNAME",
        "value": "folio_admin",
        "description": "Postgres username"
      },
      {
        "name": "DB_PASSWORD",
        "value": "folio_admin",
        "description": "Postgres username password"
      },
      {
        "name": "DB_DATABASE",
        "value": "okapi_modules",
        "description": "Postgres database name"
      },
      {
        "name": "OKAPI_URL",
        "value": "okapi",
        "description": "Okapi URL"
      },
      {
        "name": "SYSTEM_USER_PASSWORD",
        "value": "mod-entities-links",
        "description": "Password for system user"
      },
      {
        "name": "KAFKA_HOST",
        "value": "kafka",
        "description": "Kafka broker hostname"
      },
      {
        "name": "KAFKA_PORT",
        "value": "9092",
        "description": "Kafka broker port"
      },
      {
        "name": "KAFKA_SECURITY_PROTOCOL",
        "value": "PLAINTEXT",
        "description": "Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)"
      },
      {
        "name": "KAFKA_SSL_KEYSTORE_LOCATION",
        "value": "",
        "description": "The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client."
      },
      {
        "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
        "value": "",
        "description": "The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured."
      },
      {
        "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
        "value": "",
        "description": "The location of the Kafka trust store file."
      },
      {
        "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
        "value": "",
        "description": "The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled."
      },
      {
        "name": "KAFKA_CONSUMER_MAX_POLL_RECORDS",
        "value": "50",
        "description": "Maximum number of records returned in a single call to poll()."
      },
      {
        "name": "KAFKA_INSTANCE_AUTHORITY_TOPIC_PARTITIONS",
        "value": "10",
        "description": "Amount of partitions for `links.instance-authority` topic."
      },
      {
        "name": "KAFKA_INSTANCE_AUTHORITY_TOPIC_REPLICATION_FACTOR",
        "value": "",
        "description": "Replication factor for `links.instance-authority` topic."
      },
      {
        "name": "KAFKA_INSTANCE_AUTHORITY_STATS_TOPIC_PARTITIONS",
        "value": "10",
        "description": "Amount of partitions for `links.instance-authority-stats` topic."
      },
      {
        "name": "KAFKA_INSTANCE_AUTHORITY_STATS_TOPIC_REPLICATION_FACTOR",
        "value": "",
        "description": "Replication factor for `links.instance-authority-stats` topic."
      },
      {
        "name": "KAFKA_AUTHORITIES_CONSUMER_CONCURRENCY",
        "value": "1",
        "description": "Number of kafka concurrent threads for `inventory.authority` message consuming."
      },
      {
        "name": "KAFKA_INSTANCE_AUTHORITY_STATS_CONSUMER_CONCURRENCY",
        "value": "1",
        "description": "Number of kafka concurrent threads for `links.instance-authority-stats` message consuming."
      },
      {
        "name": "KAFKA_INSTANCE_AUTHORITY_CHANGE_PARTITIONS",
        "value": "100",
        "description": "Number of instance-authority links `links.instance-authority` event contains while processing authority link source change."
      },
      {
        "name": "INSTANCE_STORAGE_QUERY_BATCH_SIZE",
        "value": "50",
        "description": "Number of instances to retrieve from inventory storage per one request (Max 90 - based on maximum URI length)"
      }
    ]
  }
}
